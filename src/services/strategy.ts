import { Card, CardValue } from '@/services/card';

export const Action = {
  Hit: 'H',
  Stand: 'S',
  DoubleDown: 'DD',
  Split: 'SP',
  Surrender: 'SR',
} as const;

export type ActionValue = (typeof Action)[keyof typeof Action];

/**
 * Strategy represents interfaces to determine an action.
 */
export interface Strategy {
  judge(dealerHand: Card, playerHands: Array<Card>): ActionValue;
}

/**
 * BasicStrategy represetns interfaces to determine an action according to the basic strategy,
 */
export class BasicStrategy implements Strategy {
  private judgeForHardHands = (() => {
    const chart = {
      '9:1': Action.Hit,
      '9:2': Action.Hit,
      '9:3': Action.DoubleDown,
      '9:4': Action.DoubleDown,
      '9:5': Action.DoubleDown,
      '9:6': Action.DoubleDown,
      '9:7': Action.Hit,
      '9:8': Action.Hit,
      '9:9': Action.Hit,
      '9:10': Action.Hit,
      '9:11': Action.Hit,
      '10:1': Action.Hit,
      '10:2': Action.DoubleDown,
      '10:3': Action.DoubleDown,
      '10:4': Action.DoubleDown,
      '10:5': Action.DoubleDown,
      '10:6': Action.DoubleDown,
      '10:7': Action.DoubleDown,
      '10:8': Action.DoubleDown,
      '10:9': Action.DoubleDown,
      '10:10': Action.Hit,
      '10:11': Action.Hit,
      '11:1': Action.Hit,
      '11:2': Action.DoubleDown,
      '11:3': Action.DoubleDown,
      '11:4': Action.DoubleDown,
      '11:5': Action.DoubleDown,
      '11:6': Action.DoubleDown,
      '11:7': Action.DoubleDown,
      '11:8': Action.DoubleDown,
      '11:9': Action.DoubleDown,
      '11:10': Action.DoubleDown,
      '11:11': Action.Hit,
      '12:1': Action.Hit,
      '12:2': Action.Hit,
      '12:3': Action.Hit,
      '12:4': Action.Stand,
      '12:5': Action.Stand,
      '12:6': Action.Stand,
      '12:7': Action.Hit,
      '12:8': Action.Hit,
      '12:9': Action.Hit,
      '12:10': Action.Hit,
      '12:11': Action.Hit,
      '13:1': Action.Hit,
      '13:2': Action.Stand,
      '13:3': Action.Stand,
      '13:4': Action.Stand,
      '13:5': Action.Stand,
      '13:6': Action.Stand,
      '13:7': Action.Hit,
      '13:8': Action.Hit,
      '13:9': Action.Hit,
      '13:10': Action.Hit,
      '13:11': Action.Hit,
      '14:1': Action.Hit,
      '14:2': Action.Stand,
      '14:3': Action.Stand,
      '14:4': Action.Stand,
      '14:5': Action.Stand,
      '14:6': Action.Stand,
      '14:7': Action.Hit,
      '14:8': Action.Hit,
      '14:9': Action.Hit,
      '14:10': Action.Hit,
      '14:11': Action.Hit,
      '15:1': Action.Hit,
      '15:2': Action.Stand,
      '15:3': Action.Stand,
      '15:4': Action.Stand,
      '15:5': Action.Stand,
      '15:6': Action.Stand,
      '15:7': Action.Hit,
      '15:8': Action.Hit,
      '15:9': Action.Hit,
      '15:10': Action.Surrender,
      '15:11': Action.Hit,
      '16:1': Action.Surrender,
      '16:2': Action.Stand,
      '16:3': Action.Stand,
      '16:4': Action.Stand,
      '16:5': Action.Stand,
      '16:6': Action.Stand,
      '16:7': Action.Hit,
      '16:8': Action.Hit,
      '16:9': Action.Surrender,
      '16:10': Action.Surrender,
      '16:11': Action.Surrender,
    } as { [key: string]: ActionValue };
    return (dealerHand: number, playerHands: number) => {
      if (playerHands <= 8) {
        return Action.Hit;
      }
      if (17 <= playerHands) {
        return Action.Stand;
      }
      return chart[`${playerHands}:${dealerHand}`];
    };
  })();
  private judgeForSoftHands = (() => {
    const chart = {
      '3:1': Action.Hit,
      '3:2': Action.Hit,
      '3:3': Action.Hit,
      '3:4': Action.Hit,
      '3:5': Action.DoubleDown,
      '3:6': Action.DoubleDown,
      '3:7': Action.Hit,
      '3:8': Action.Hit,
      '3:9': Action.Hit,
      '3:10': Action.Hit,
      '3:11': Action.Hit,
      '4:1': Action.Hit,
      '4:2': Action.Hit,
      '4:3': Action.Hit,
      '4:4': Action.Hit,
      '4:5': Action.DoubleDown,
      '4:6': Action.DoubleDown,
      '4:7': Action.Hit,
      '4:8': Action.Hit,
      '4:9': Action.Hit,
      '4:10': Action.Hit,
      '4:11': Action.Hit,
      '5:1': Action.Hit,
      '5:2': Action.Hit,
      '5:3': Action.Hit,
      '5:4': Action.DoubleDown,
      '5:5': Action.DoubleDown,
      '5:6': Action.DoubleDown,
      '5:7': Action.Hit,
      '5:8': Action.Hit,
      '5:9': Action.Hit,
      '5:10': Action.Hit,
      '5:11': Action.Hit,
      '6:1': Action.Hit,
      '6:2': Action.Hit,
      '6:3': Action.Hit,
      '6:4': Action.DoubleDown,
      '6:5': Action.DoubleDown,
      '6:6': Action.DoubleDown,
      '6:7': Action.Hit,
      '6:8': Action.Hit,
      '6:9': Action.Hit,
      '6:10': Action.Hit,
      '6:11': Action.Hit,
      '7:1': Action.Hit,
      '7:2': Action.Hit,
      '7:3': Action.DoubleDown,
      '7:4': Action.DoubleDown,
      '7:5': Action.DoubleDown,
      '7:6': Action.DoubleDown,
      '7:7': Action.Stand,
      '7:8': Action.Hit,
      '7:9': Action.Hit,
      '7:10': Action.Hit,
      '7:11': Action.Hit,
      '8:1': Action.Hit,
      '8:2': Action.Stand,
      '8:3': Action.DoubleDown,
      '8:4': Action.DoubleDown,
      '8:5': Action.DoubleDown,
      '8:6': Action.DoubleDown,
      '8:7': Action.Stand,
      '8:8': Action.Stand,
      '8:9': Action.Hit,
      '8:10': Action.Hit,
      '8:11': Action.Hit,
      '9:1': Action.Stand,
      '9:2': Action.Stand,
      '9:3': Action.Stand,
      '9:4': Action.Stand,
      '9:5': Action.Stand,
      '9:6': Action.Stand,
      '9:7': Action.Stand,
      '9:8': Action.Stand,
      '9:9': Action.Stand,
      '9:10': Action.Stand,
      '9:11': Action.Stand,
      '10:1': Action.Stand,
      '10:2': Action.Stand,
      '10:3': Action.Stand,
      '10:4': Action.Stand,
      '10:5': Action.Stand,
      '10:6': Action.Stand,
      '10:7': Action.Stand,
      '10:8': Action.Stand,
      '10:9': Action.Stand,
      '10:10': Action.Stand,
      '10:11': Action.Stand,
    } as { [key: string]: ActionValue };
    return (dealerHand: number, playerHands: number) => {
      return chart[`${playerHands}:${dealerHand}`];
    };
  })();
  private judgeForSplitHands = (() => {
    const chart = {
      '2:1': Action.Split,
      '2:2': Action.Split,
      '2:3': Action.Split,
      '2:4': Action.Split,
      '2:5': Action.Split,
      '2:6': Action.Split,
      '2:7': Action.Split,
      '2:8': Action.Split,
      '2:9': Action.Split,
      '2:10': Action.Split,
      '2:11': Action.Split,
      '4:1': Action.Hit,
      '4:2': Action.Split,
      '4:3': Action.Split,
      '4:4': Action.Split,
      '4:5': Action.Split,
      '4:6': Action.Split,
      '4:7': Action.Split,
      '4:8': Action.Hit,
      '4:9': Action.Hit,
      '4:10': Action.Hit,
      '4:11': Action.Hit,
      '6:1': Action.Hit,
      '6:2': Action.Split,
      '6:3': Action.Split,
      '6:4': Action.Split,
      '6:5': Action.Split,
      '6:6': Action.Split,
      '6:7': Action.Split,
      '6:8': Action.Hit,
      '6:9': Action.Hit,
      '6:10': Action.Hit,
      '6:11': Action.Hit,
      '8:1': Action.Hit,
      '8:2': Action.Hit,
      '8:3': Action.Hit,
      '8:4': Action.Hit,
      '8:5': Action.Split,
      '8:6': Action.Split,
      '8:7': Action.Hit,
      '8:8': Action.Hit,
      '8:9': Action.Hit,
      '8:10': Action.Hit,
      '8:11': Action.Hit,
      '10:1': Action.Hit,
      '10:2': Action.DoubleDown,
      '10:3': Action.DoubleDown,
      '10:4': Action.DoubleDown,
      '10:5': Action.DoubleDown,
      '10:6': Action.DoubleDown,
      '10:7': Action.DoubleDown,
      '10:8': Action.DoubleDown,
      '10:9': Action.DoubleDown,
      '10:10': Action.Hit,
      '10:11': Action.Hit,
      '12:1': Action.Hit,
      '12:2': Action.Split,
      '12:3': Action.Split,
      '12:4': Action.Split,
      '12:5': Action.Split,
      '12:6': Action.Split,
      '12:7': Action.Hit,
      '12:8': Action.Hit,
      '12:9': Action.Hit,
      '12:10': Action.Hit,
      '12:11': Action.Hit,
      '14:1': Action.Hit,
      '14:2': Action.Split,
      '14:3': Action.Split,
      '14:4': Action.Split,
      '14:5': Action.Split,
      '14:6': Action.Split,
      '14:7': Action.Split,
      '14:8': Action.Hit,
      '14:9': Action.Hit,
      '14:10': Action.Hit,
      '14:11': Action.Hit,
      '16:1': Action.Split,
      '16:2': Action.Split,
      '16:3': Action.Split,
      '16:4': Action.Split,
      '16:5': Action.Split,
      '16:6': Action.Split,
      '16:7': Action.Split,
      '16:8': Action.Split,
      '16:9': Action.Split,
      '16:10': Action.Split,
      '16:11': Action.Split,
      '18:1': Action.Stand,
      '18:2': Action.Split,
      '18:3': Action.Split,
      '18:4': Action.Split,
      '18:5': Action.Split,
      '18:6': Action.Split,
      '18:7': Action.Stand,
      '18:8': Action.Split,
      '18:9': Action.Split,
      '18:10': Action.Stand,
      '18:11': Action.Stand,
      '20:1': Action.Stand,
      '20:2': Action.Stand,
      '20:3': Action.Stand,
      '20:4': Action.Stand,
      '20:5': Action.Stand,
      '20:6': Action.Stand,
      '20:7': Action.Stand,
      '20:8': Action.Stand,
      '20:9': Action.Stand,
      '20:10': Action.Stand,
      '20:11': Action.Stand,
    } as { [key: string]: ActionValue };
    return (dealerHand: number, playerHands: number) => {
      return chart[`${playerHands}:${dealerHand}`];
    };
  })();
  judge(dealerCard: Card, playerCards: Array<Card>): (typeof Action)[keyof typeof Action] {
    const ACE_COUNT = 1;
    if (playerCards.length === 2 && playerCards[0].value === playerCards[1].value) {
      return this.judgeForSplitHands(
        dealerCard.count || ACE_COUNT,
        playerCards.reduce((total, card) => {
          return total + (card.count || ACE_COUNT);
        }, 0),
      );
    }

    if (
      playerCards.some((card) => {
        return card.value === CardValue.Ace;
      })
    ) {
      return this.judgeForSoftHands(
        dealerCard.count || ACE_COUNT,
        playerCards.reduce((total, card) => {
          return total + (card.count || ACE_COUNT);
        }, 0),
      );
    }

    return this.judgeForHardHands(
      dealerCard.count || ACE_COUNT,
      playerCards.reduce((total, card) => {
        return total + (card.count || ACE_COUNT);
      }, 0),
    );
  }
}
